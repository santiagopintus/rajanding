{"version":3,"sources":["utils/constants.js","components/contexts/cartContext.js","components/cartWidget/cartWidget.js","components/Navbar/NavBar.js","components/splideCarousel/splideCarousel.js","components/item/item.js","components/containers/itemList/itemList.js","utils/firebaseConfig.js","utils/firestoreFetch.js","components/containers/itemListContainer/itemListContainer.js","components/footer/footer.js","components/itemCount/itemCount.js","components/modal/modal.js","components/itemDetail/itemDetail.js","utils/firestoreFetchOne.js","components/containers/itemDetailContainer/itemDetailContainer.js","components/cart/cart.js","components/contexts/userContext.js","components/checkoutForm/checkoutForm.js","components/checkout/checkout.js","components/toTopArrow/toTopArrow.js","App.js","reportWebVitals.js","index.js"],"names":["constants","productsImgUrl","iconsImgUrl","CartContext","createContext","CartProvider","children","useState","cartList","setCartList","isInCart","id","find","item","Provider","value","addToCart","newItem","qty","title","price","imgSrc","stock","clear","removeItem","itemId","filter","getItemsQty","length","map","reduce","total","getTotal","CartWidget","cartContext","useContext","cartTotalQty","setCartTotalQty","useEffect","type","className","src","alt","Navbar","to","carritoCount","SplideCarousel","images","imgAlt","isItemDetail","options","gap","index","Item","ItemList","items","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","firestoreFetch","categoryId","a","q","query","collection","where","orderBy","getDocs","querySnapshot","productsArray","docs","doc","data","ItemListContainer","setItems","idCategory","useParams","then","result","catch","err","console","log","footer","href","target","rel","ItemCount","initial","onAdd","count","setCount","reset","onClick","disabled","Modal","content","button","document","querySelector","click","tabIndex","ItemDetail","itemAdded","setItemAdded","description","firebaseFetchOne","docRef","getDoc","docSnap","exists","ItemDetailContainer","setItem","idItem","firestoreFetchOne","Cart","setTotal","UserContext","UserProvider","user","setUser","isLoggedIn","setIsLoggedIn","login","logout","CheckoutForm","userContext","name","onSubmit","e","newUser","preventDefault","phone","email","htmlFor","required","Checkout","orderId","setOrderId","createOrder","buyer","date","Date","storeNewOrder","order","newOrderRef","setDoc","updateStock","newStock","forEach","itemRef","updateDoc","text","navigator","clipboard","writeText","ToTopArrow","isVisible","setIsVisible","handleScroll","scrollTop","window","pageYOffset","windowHeight","innerHeight","body","clientHeight","addEventListener","scrollTo","top","behavior","App","basename","process","logoSrc","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3d0ff352.chunk.js","sourcesContent":["\r\nconst constants = {\r\n  //Cambiando estas constantes no me tengo que preocupar por actualizar el resto de la aplicación.\r\n  productsImgUrl:\r\n    \"https://raw.githubusercontent.com/santiagopintus/nosVamos-pintus/master/public/images/products/\",\r\n  iconsImgUrl:\r\n    \"https://raw.githubusercontent.com/santiagopintus/nosVamos-pintus/master/public/images/icons/\",\r\n};\r\n\r\nexport default constants;","import { createContext, useState } from \"react\";\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst CartProvider = ({ children }) => {\r\n    \r\n    const [cartList, setCartList] = useState([]);\r\n    // const [cartItemsQty, setCartItemsQty] = useState(0);\r\n\r\n    const addToCart = (newItem, qty) => {\r\n        /* Agrega productos al carrito. Si el producto ya existe en el carrito,\r\n        se suma la cantidad. Si no existe, se agrega al carrito */\r\n        \r\n        if (isInCart(newItem.id)) {\r\n            isInCart(newItem.id).qty += qty;\r\n            setCartList([...cartList]);\r\n        } else {\r\n            // Si el item no está en el carrito, se agrega\r\n            setCartList([...cartList, {\r\n                id: newItem.id,\r\n                title: newItem.title,\r\n                price: newItem.price,\r\n                imgSrc: newItem.imgSrc,\r\n                stock: newItem.stock,\r\n                qty: qty,\r\n            }]);\r\n        }\r\n    }\r\n\r\n    const removeItem = (itemId) => {\r\n        /* Elimina un producto del carrito según el ID */\r\n        setCartList(cartList.filter(item => item.id !== itemId));\r\n    }\r\n\r\n    const clear = () => {\r\n        /* Limpia el carrito */\r\n        setCartList([]);\r\n    }\r\n\r\n    const isInCart = (id) => {\r\n        /* Retorna true si el producto está en el carrito */\r\n        return cartList.find(item => item.id === id);\r\n    }\r\n\r\n    const getItemsQty = () => {\r\n        if (cartList.length > 0) {\r\n            let qtys = cartList.map(item => item.qty);\r\n            let total = qtys.reduce((total, qty) => total + qty);\r\n        return total;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    const getTotal = () => {\r\n        if (cartList.length > 0) {\r\n            let prices = cartList.map(item => item.price * item.qty);\r\n            let total = prices.reduce((total, price) => total + price);\r\n            return total;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CartContext.Provider value={{\r\n            cartList,\r\n            addToCart,\r\n            clear,\r\n            removeItem,\r\n            isInCart,\r\n            getItemsQty,\r\n            getTotal\r\n        }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n};\r\n\r\nexport default CartProvider;","import './cartWidget.css'\r\nimport constants from '../../utils/constants'\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { CartContext } from '../contexts/cartContext';\r\n\r\nconst CartWidget = () => {\r\n    const cartContext = useContext(CartContext);\r\n    // Declaro un estado que contiene la cantidad total de productos en el carrito\r\n    let [ cartTotalQty, setCartTotalQty ] = useState(0);\r\n    \r\n    useEffect(() => {\r\n        //Cuando se agrega o quita un producto se llama esta función\r\n        setCartTotalQty(cartContext.getItemsQty());\r\n    }, [cartContext]);\r\n\r\n    return (\r\n        <>\r\n            <button type=\"button\" className=\"carrito btn d-flex\">\r\n                {\r\n                    //Carga diferentes imágenes dependiendo del contenido del carrito\r\n                    cartTotalQty > 0 &&\r\n                    <>\r\n                        <img src={constants.iconsImgUrl + \"cartWidget_full.svg\"} alt=\"El icono de un carrito de compras lleno\" />\r\n                        <span className=\"badge bg-secondary badge-carrito\">{cartTotalQty}</span>\r\n                    </>\r\n                    //No se muestra el badge cuando no hay items    \r\n                    /* <img src={constants.iconsImgUrl + \"cartWidget_empty.svg\"} alt=\"El icono de un carrito de compras vacío\" /> */\r\n                }\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartWidget;","import './NavBar.css';\r\nimport CartWidget from '../cartWidget/cartWidget';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n            \r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        <h2 className=\"site-name\">Rajanding</h2>\r\n                    </Link>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n            \r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Inicio</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/category/decorativo\">Decorativos</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/category/vajilla\">Vajillas</Link>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/category/varios\">Varios</Link>\r\n                            </li>\r\n                        \r\n                        </ul>\r\n\r\n                        <div className=\"d-flex align-center gap-3\">\r\n\r\n                            <Link className=\"no-text-dec\" to=\"/cart\">\r\n                                <CartWidget carritoCount=\"2\"/>\r\n                            </Link>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","//Importo la libreria Splide js disponible en https://splidejs.com/\r\nimport { Splide, SplideSlide } from '@splidejs/react-splide';\r\n//Linkeo los estilos de la librería\r\nimport '@splidejs/splide/dist/css/splide.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport constants from '../../utils/constants';\r\nconst SplideCarousel = ({images, imgAlt, isItemDetail = false, itemId}) => {\r\n    /* props: images: array de imagenes, imgAlt: string con el texto alternativo de la imagen */\r\n    /* Crea un slide por cada imagen del producto que haya */\r\n\r\n    /* Si el item no contiene imagenes o el item no se pudo obtener todavía */\r\n    if (typeof images === 'undefined') {\r\n        images = [];\r\n    }\r\n    \r\n    return (\r\n        <Splide\r\n            //Configuracion del carousel de imagenes.\r\n            options={ {\r\n                type: \"loop\",\r\n                gap: '1rem'\r\n            }}\r\n        >\r\n            {images.map((src, index) => (\r\n                <SplideSlide key={index}>\r\n                    {/* Si el item es un detalle de producto, La imagen no tiene link */}\r\n                    {isItemDetail ?\r\n                        <img className=\"slide__image\" key={index} src={constants.productsImgUrl + src}\r\n                            alt={imgAlt}\r\n                        />\r\n                        :\r\n                        <Link className=\"no-text-dec\" to={`/item/${itemId}`}>\r\n                            <img className=\"slide__image\" key={index} src={constants.productsImgUrl + src}\r\n                                alt={imgAlt}\r\n                            />\r\n                        </Link>\r\n                    }\r\n                </SplideSlide>\r\n            ))};\r\n        </Splide>\r\n    )\r\n}\r\n\r\nexport default SplideCarousel;\r\n\r\n","import './item.css';\r\nimport SplideCarousel from '../splideCarousel/splideCarousel';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Item = ({id, title, src, price}) => {\r\n\r\n    return (\r\n        <>\r\n            {/* Comienza el item */}\r\n            <div className=\"item\">\r\n                {/* La imagen del item */}\r\n                <div className=\"item__image-container\">\r\n                    <SplideCarousel images={src} imgAlt={title} itemId={id}/>\r\n                </div>\r\n\r\n                {/* La información del item */}\r\n                <div className=\"item__info\">\r\n                    <h2 className=\"item__title\">{title}</h2>\r\n                    <p className=\"item__price\">${price}</p>\r\n                    <div className=\"item__options\">\r\n                        <Link className=\"btn btn-primary\" to={`/item/${id}`}>\r\n                            Detalles\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>    \r\n        </>\r\n    )\r\n};\r\n\r\nexport default Item;","import Item from '../../item/item';\r\nimport './itemList.css';\r\n\r\nconst ItemList = ({ items }) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"items-container\">\r\n                {\r\n                items.length > 0 ?\r\n                \r\n                items.map((item) => {\r\n                    return (\r\n                        <Item id={item.id} key={item.id} src={item.imgSrc} price={item.price} stock={item.stock} title={item.title}/>\r\n                    )\r\n                })\r\n                :\r\n                <p>Cargando los productos...</p>\r\n                } \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ItemList;","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// import { getAnalytics } from \"firebase/analytics\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAEEI6vU_x3y_G8iwIJulejnrPnq7Nw3ck\",\r\n  authDomain: \"rajanding-reactjs.firebaseapp.com\",\r\n  projectId: \"rajanding-reactjs\",\r\n  storageBucket: \"rajanding-reactjs.appspot.com\",\r\n  messagingSenderId: \"1026965930799\",\r\n  appId: \"1:1026965930799:web:c7801132bb660248f8d7da\",\r\n  measurementId: \"G-J9KZNYW2JT\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n// const analytics = getAnalytics(app);\r\nconst db = getFirestore(app);\r\n\r\nexport default db;","import { query, orderBy, collection, getDocs, where } from '@firebase/firestore';\r\nimport db from './firebaseConfig';\r\n\r\n\r\nconst firestoreFetch = async (categoryId) => {\r\n    let q;\r\n    if (categoryId) {\r\n        q = query(collection(db, \"products\"), where(\"category\", \"==\", categoryId));\r\n    } else {\r\n        q = query(collection(db, \"products\"), orderBy(\"title\"));\r\n    }\r\n    const querySnapshot = await getDocs(q);\r\n    const productsArray = querySnapshot.docs.map(doc => (\r\n        {\r\n            id: doc.id,\r\n            ...doc.data()\r\n        }\r\n    ));\r\n    return productsArray;\r\n}\r\n\r\nexport default firestoreFetch;","import { useState, useEffect } from 'react';\r\nimport ItemList from '../../containers/itemList/itemList';\r\nimport { useParams } from 'react-router';\r\nimport firestoreFetch from '../../../utils/firestoreFetch';\r\n\r\nconst ItemListContainer = () => { \r\n    \r\n    const [items, setItems] = useState([]);\r\n    const { idCategory } = useParams();\r\n\r\n    //componentDidUpdate\r\n    useEffect(() => {\r\n        firestoreFetch(idCategory)\r\n            .then(result => {setItems(result)})\r\n            .catch(err => console.log(err))\r\n    }, [idCategory]);\r\n\r\n    return (\r\n        <>\r\n            <ItemList items={items}/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ItemListContainer;","import './footer.css';\r\n\r\nconst footer = () => {\r\n    return (\r\n        <>\r\n            <footer className=\"footer\">\r\n                <p className=\"copyright\">Diseñado y desarrollado por\r\n                    <a href=\"https://github.com/santiagopintus\" target=\"_blank\" rel=\"noreferrer\"> Santiago Pintus</a> | Vamonos &copy;\r\n                </p>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default footer;","import { useState } from 'react';\r\nimport './itemCount.css';\r\nimport constants from '../../utils/constants';\r\nconst ItemCount = ({ stock, initial, onAdd }) => {\r\n\r\n    let [count, setCount] = useState(initial);\r\n\r\n    const increment = () => {\r\n        if (stock > count && stock > 0) {\r\n            setCount(count + 1)\r\n        }\r\n    };\r\n        \r\n    const decrement = () => {\r\n        if (count > 1 && stock > 0) {\r\n            setCount(count - 1)\r\n        }\r\n    };\r\n    const reset = () => setCount(0);\r\n\r\n    const onAddToCart = (quantity) => {\r\n        onAdd(quantity);\r\n        reset();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"item-counter-container\">\r\n                \r\n                <div className=\"item-counter btn-group\">\r\n                    <button className=\"btn btn-primary\" onClick={decrement}>-</button>\r\n                    <p>{count}</p>\r\n                    <button className=\"btn btn-primary\" onClick={increment}>+</button>\r\n                </div>\r\n                <button className=\"delete-icon\" onClick={reset} title=\"Resetear item\">\r\n                    <img src={constants.iconsImgUrl + \"delete_icon.svg\"} alt=\"Icono de resetear la cantidad del item seleccionado\"></img>\r\n                </button>\r\n                <button className=\"add-icon\" title=\"Agregar al carrito\"\r\n                    onClick={() => onAddToCart(count)}\r\n                    disabled={count === 0 || stock === 0}\r\n                >\r\n                    <img src={constants.iconsImgUrl + \"addToCart.svg\"} alt=\"Icono de agregar al carrito\"></img>\r\n                </button>\r\n                \r\n                {\r\n                    stock <= 0 &&\r\n                    <p className=\"stock-error\">Sin stock</p>\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemCount;","import { useEffect } from \"react\";\r\nimport \"./modal.css\";\r\n\r\nconst Modal = ({title, content, button}) => {\r\n    \r\n    useEffect(() => {\r\n        document.querySelector(\"#modalTrigger\").click()\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            \r\n            <button type=\"button\" id=\"modalTrigger\" className=\"btn modal-button\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n                {/* Boton oculto que muestra el alert */}\r\n                Mostrar modal\r\n            </button>\r\n            \r\n            <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">{title}</h5>\r\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Ok\"></button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <p>{content}</p>\r\n                    </div>\r\n                        <div className=\"modal-footer\">\r\n                            {\r\n                                button ?\r\n                                    button\r\n                                    :\r\n                                    <button type=\"button\" className=\"btn btn-primary\"                     \r\n                                    data-bs-dismiss=\"modal\">Ok</button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;","import './itemDetail.css';\r\nimport SplideCarousel from '../splideCarousel/splideCarousel';\r\nimport ItemCount from '../itemCount/itemCount';\r\nimport Modal from '../modal/modal';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\nimport { CartContext } from '../contexts/cartContext';\r\n\r\nconst ItemDetail = ({ item }) => {\r\n    const cartContext = useContext(CartContext);\r\n\r\n    const images = item.imgSrc\r\n    \r\n    const [itemAdded, setItemAdded] = useState(false);\r\n    \r\n    const onAdd = (qty) => {\r\n        setItemAdded(true);\r\n        cartContext.addToCart(item, qty);\r\n    }\r\n\r\n    const itemInCart = () => {\r\n        return cartContext.isInCart(item.id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"item-detail\">\r\n\r\n                {!item.title ?\r\n                    <p className=\"cargando-msg\">Cargando item...</p>\r\n                    :\r\n                    <>\r\n                        <div className=\"item-detail__carousel\">\r\n                            <SplideCarousel images={images} imgAlt={item.title} isItemDetail={true}/>\r\n                        </div>\r\n                        <div className=\"item-detail__info\">\r\n                            <h2 className=\"item-detail__title\">{item.title}</h2>\r\n                            <p className=\"item-detail__description\">{item.description}</p>\r\n                            <p className=\"item-detail__stock\">Stock: {item.stock}</p>\r\n                            <p className=\"item-detail__price\">${item.price}</p>\r\n                            \r\n                            {!itemAdded ?\r\n                                <>\r\n                                <ItemCount stock={item.stock} initial={0} onAdd={onAdd} />\r\n                                {\r\n                                    itemInCart() &&\r\n                                    <p className=\"item-detail__added\">Este producto ya está en el carrito</p>\r\n                                }\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    {/* <p className=\"item-detail__added\">Item agregado al carrito</p> */}\r\n                                    <Link className=\"btn btn-primary\" to=\"/cart\">\r\n                                        Terminar mi compra\r\n                                    </Link>\r\n                                    <Modal title=\"Agregado!\" content=\"Producto agregado al carrito\"\r\n                                        button={\r\n                                            <Link className=\"no-text-dec\" to=\"/cart\">\r\n                                                <button data-bs-dismiss=\"modal\" className=\"btn btn-primary\">Ir al carrito</button>\r\n                                            </Link>\r\n                                        }\r\n                                    />\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </>\r\n    );  \r\n};\r\n\r\nexport default ItemDetail;","import db from './firebaseConfig';\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\n\r\nconst firebaseFetchOne = async (id) => {\r\n    const docRef = doc(db, \"products\", id);\r\n    const docSnap = await getDoc(docRef);\r\n\r\n    if (docSnap.exists()) {\r\n        const item = {\r\n            id: docSnap.id,\r\n            ...docSnap.data()\r\n        }\r\n        return item;\r\n    } else {\r\n        // doc.data() will be undefined in this case\r\n        console.log(\"No se encuentra el documento!\");\r\n    }\r\n}\r\n\r\nexport default firebaseFetchOne;","import './itemDetailContainer.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport ItemDetail from '../../itemDetail/itemDetail';\r\nimport firestoreFetchOne from '../../../utils/firestoreFetchOne';\r\n\r\nconst ItemDetailContainer = () => {\r\n\r\n    const [item, setItem] = useState({});\r\n    const { idItem } = useParams();\r\n\r\n    /* Obteniendo el item usando promise */\r\n    useEffect(() => {\r\n        firestoreFetchOne(idItem)\r\n            .then(item => setItem(item))\r\n            .catch(err => console.log(err));\r\n    }, [idItem]);\r\n\r\n    return (\r\n        <ItemDetail item={item}/>\r\n    )\r\n    \r\n}\r\n\r\nexport default ItemDetailContainer;","import { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport constants from '../../utils/constants';\r\nimport { CartContext } from '../contexts/cartContext';\r\nimport SplideCarousel from '../splideCarousel/splideCarousel';\r\nimport './cart.css';\r\n\r\nconst Cart = () => {\r\n\r\n    const cartContext = useContext(CartContext);\r\n\r\n    const [total, setTotal] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setTotal(cartContext.getTotal());\r\n    }, [cartContext]);\r\n\r\n    return (\r\n        <div className=\"cart\">\r\n            <h1>Bienvenido al carrito! <img src={constants.iconsImgUrl + \"cartWidget_empty.png\"} alt=\"Icono de un carrito\"></img></h1>\r\n\r\n            <div className=\"cart-list\">\r\n                {\r\n                    cartContext.cartList.length > 0 ?\r\n                        <>\r\n                            <div className=\"cart-opciones\">\r\n                                <button onClick={cartContext.clear} className=\"btn btn-secondary\">Vaciar carrito</button>\r\n                                <Link className=\"btn btn-primary\" to=\"/\">\r\n                                    Agregar Productos\r\n                                </Link>\r\n                            </div>\r\n\r\n                            <div className=\"cart-list-items\">\r\n                                \r\n                                {cartContext.cartList.map((item, index) => {\r\n                                    return (\r\n                                        <div className=\"cart-item\" key={index}>\r\n                                            <div className=\"cart-item-content\">\r\n                                                <div className=\"cart-item-img\">\r\n                                                    <SplideCarousel images={item.imgSrc} imgAlt={item.title} itemId={item.id}></SplideCarousel>\r\n                                                </div>\r\n                                                <div className=\"cart-item-info\">\r\n                                                    <p className=\"cart-item-name\">Producto: {item.title}</p>\r\n                                                    <p className=\"cart-item-price\">${item.price}</p>\r\n                                                    <p className=\"cart-item-quantity\">Cantidad: {item.qty}</p>\r\n                                                    <p className=\"cart-item-total\">Total: ${item.price * item.qty}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            <button onClick={() => cartContext.removeItem(item.id)} className=\"btn\">\r\n                                                <img src={constants.iconsImgUrl + \"delete_icon.svg\"} alt=\"Icono de borrar un producto del carrito\"></img>\r\n                                            </button>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        <div className=\"cart-empty\">\r\n                            <p>Tu carrito está vacío</p>\r\n                            <Link className=\"btn btn-primary\" to=\"/\">Agregar productos</Link>\r\n                        </div>\r\n                }\r\n            </div>\r\n            \r\n            {\r\n                total > 0 &&\r\n                    \r\n                <div className=\"cart-total\">\r\n                    <p>Total del carrito: ${total}</p>\r\n                    <Link className=\"btn btn-primary checkout-btn\" to=\"/checkout\">Comprar carrito</Link>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;","import { createContext, useState } from \"react\";\r\n\r\nexport const UserContext = createContext();\r\n\r\n/* Este context se encarga de guardar la información del usuario para concretar la compra */\r\nconst UserProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const login = (user) => {\r\n        //El usuario se logea cuando completa el formulario de compra\r\n        setUser(user);\r\n        setIsLoggedIn(true);\r\n    };\r\n    \r\n    const logout = () => {\r\n        //El usuario se deslogea cuando se completa la compra\r\n        setUser(null);\r\n        setIsLoggedIn(false);\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider value={{\r\n            user,\r\n            isLoggedIn,\r\n            login,\r\n            logout\r\n        }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n\r\nexport default UserProvider;","import { UserContext } from '../contexts/userContext';\r\nimport './checkoutForm.css';\r\nimport { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/* Este componente registra los datos del usuario o los lee del UserContext */\r\nconst CheckoutForm = () => {\r\n    const userContext = useContext(UserContext);\r\n    const { user } = useContext(UserContext);\r\n\r\n    // const [currentUser, setUser] = useState({});\r\n\r\n    const loginUser = (e) => {\r\n        let newUser = {}\r\n        e.preventDefault();\r\n        // Guardo los datos del form en un objeto\r\n        newUser.name = e.target.name.value;\r\n        newUser.phone = e.target.phone.value;\r\n        newUser.email = e.target.email.value;\r\n        // Guardo el objeto en el estado\r\n        userContext.login(newUser);\r\n    }\r\n\r\n    const logoutUser = () => {\r\n        userContext.logout()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Identifiquemos tus datos antes de continuar</h1>\r\n            {userContext.isLoggedIn ?\r\n                <>\r\n                    <div className=\"checkout-container\">\r\n                        <h2 className=\"checkout-title\">Hola! {user.name}! Gracias por comprar con nosotros!</h2>\r\n\r\n                        <div className=\"checkout-options\">\r\n                            <button className=\"btn btn-secondary\" onClick={logoutUser}>No soy {user.name}</button>\r\n                            <Link className=\"btn btn-primary\" to=\"final-step\">\r\n                                Proceder a la compra\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                :\r\n                <>\r\n                    <form onSubmit={loginUser} className=\"checkout-container\">\r\n                        \r\n                        <h2 className=\"checkout-title\">Completa tus datos para concretar tu compra</h2>\r\n\r\n                        <fieldset>\r\n                            <div className=\"field\">\r\n                                <label htmlFor=\"name\">Nombre y Apellido</label>\r\n                                <input id=\"name\" type=\"text\" name=\"name\" required></input>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label htmlFor=\"phone\">Teléfono</label>\r\n                                <input id=\"phone\" type=\"tel\" name=\"phone\" required></input>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input id=\"email\" type=\"email\" name=\"email\" required></input>\r\n                            </div>\r\n                        </fieldset>\r\n\r\n                        <button className=\"btn btn-primary checkout-btn\">Cargar mis datos</button>\r\n                    </form>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckoutForm;","import { collection, doc, setDoc, updateDoc } from \"firebase/firestore\";\r\nimport './checkout.css';\r\nimport { CartContext } from '../contexts/cartContext';\r\nimport { useContext, useState} from 'react';\r\nimport { UserContext } from '../contexts/userContext';\r\nimport Modal from '../modal/modal';\r\nimport { Link } from 'react-router-dom';\r\nimport db from \"../../utils/firebaseConfig\";\r\n\r\n/* Este componente muestra los datos finales de la compra y guarda la orden en la DB */\r\nconst Checkout = () => {\r\n    const cartContext = useContext(CartContext);\r\n    const { user } = useContext(UserContext);\r\n    const [orderId, setOrderId] = useState(null);\r\n\r\n    const finishOrder = () => {\r\n        // Se crea una orden y se guarda en la DB\r\n        const order = createOrder();\r\n        storeNewOrder(order)\r\n            .then(order => setOrderId(order.id))\r\n            // Actualizamos el stock en la DB\r\n            .then(updateStock());\r\n        //Vaciamos el carrito\r\n        cartContext.clear();\r\n    }\r\n\r\n    const createOrder = () => {\r\n        // Crea una nueva orden en forma de objeto\r\n        let newOrder = {\r\n            buyer: user,\r\n            items: cartContext.cartList.map(item => {\r\n                return {\r\n                    id: item.id,\r\n                    title: item.title,\r\n                    price: item.price\r\n                }\r\n            }),\r\n            date: new Date(),\r\n            total: cartContext.getTotal()\r\n        };\r\n        \r\n        return newOrder;\r\n    }\r\n\r\n    const storeNewOrder = async (order) => {\r\n        // Obtenemos la referencia de la colección de ordenes\r\n        const newOrderRef = doc(collection(db, \"orders\"));\r\n        // Guardamos la orden en la colección\r\n        await setDoc(newOrderRef, order)\r\n\r\n        return newOrderRef;\r\n    }\r\n\r\n    const copyText = (text) => {\r\n        navigator.clipboard.writeText(text);\r\n    }\r\n\r\n    const updateStock = () => {\r\n        let newStock;\r\n        cartContext.cartList.forEach(async (item) => {\r\n            const itemRef = doc(db, \"products\", item.id);\r\n            if ((item.stock - item.qty) < 0) {\r\n                newStock = 0;\r\n            } else {\r\n                newStock = item.stock - item.qty;\r\n            }\r\n            await updateDoc(itemRef, {\r\n                stock: newStock\r\n            })\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"checkout-container checkout-final-step\">\r\n            <h1>Finalizar Compra</h1>\r\n            \r\n            {cartContext.getItemsQty() > 0 ?\r\n                <div className=\"checkout\">\r\n                    <div className=\"datos-flex\">\r\n                        <div className=\"datos-usuario\">\r\n                            <h2>Datos de usuario</h2>\r\n                            <h3>Nombre: {user.name}</h3>\r\n                            <h3>Teléfono: {user.phone}</h3>\r\n                            <h3>Email: {user.email}</h3>\r\n                        </div>\r\n\r\n                        <div className=\"datos-compra\">\r\n                            <h2>Datos de compra</h2>\r\n                            <h3>Estás llevando: {cartContext.getItemsQty()} {cartContext.getItemsQty() > 1 ? \"items\" : \"item\"}</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <h2 className=\"checkout-total\">Total a pagar: ${cartContext.getTotal()}</h2>\r\n                    <button className=\"btn btn-primary\" onClick={finishOrder}>Pagar</button>\r\n                </div>\r\n                    :\r\n                        //Si no hay items en el carrito, y todavía no se generó una orden de compra, muestra un mensaje\r\n                        !orderId ?\r\n                        <>\r\n                            <Modal title=\"No hay productos en el carrito\" content=\"Por favor agregue productos al carrito\"\r\n                                button={<Link className=\"no-text-dec\" to=\"/\"><button className=\"btn btn-primary\" data-bs-dismiss=\"modal\">Agregar Productos</button></Link>}\r\n                            />\r\n                            <div className=\"center-content\">\r\n                                <h3>No hay productos para comprar</h3>\r\n                                <Link className=\"btn btn-primary\" to=\"/\">Agregar productos :D</Link>\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        //Si ya se generó una orden de compra, muestra otro mensaje\r\n                        <>\r\n                            <Modal title=\"Compra realizada\" content={`Gracias por tu compra! Tu número de compra es: ${orderId}`}\r\n                                button={\r\n                                    <button\r\n                                        className=\"btn btn-primary\"\r\n                                        data-bs-dismiss=\"modal\"\r\n                                        onClick={() => copyText(orderId)}\r\n                                    >Copiar</button>}\r\n                            />\r\n                            <div className=\"center-content\">\r\n                                <h3>Muchas gracias por tu compra{user.name && `, ${user.name}`}!</h3>\r\n                                <Link className=\"btn btn-primary\" to=\"/\">Volver al inicio</Link>\r\n                            </div>\r\n                        </>     \r\n                \r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Checkout;","import { useEffect, useState } from \"react\";\r\nimport \"./toTopArrow.css\";\r\n\r\nconst ToTopArrow = () => {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    \r\n    const handleScroll = () => {\r\n        const scrollTop = window.pageYOffset;\r\n        const windowHeight = window.innerHeight;\r\n        const documentHeight = document.body.clientHeight;\r\n    \r\n        if (scrollTop > windowHeight) {\r\n            setIsVisible(true);\r\n        } else {\r\n            setIsVisible(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => { \r\n        document.addEventListener('scroll', handleScroll)\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {isVisible &&\r\n                <div className=\"to-top-arrow\" onClick={() => { window.scrollTo({ top: 0, behavior: 'smooth' }) }}>\r\n                    <img className=\"arrow-icon\" src=\"images/icons/top-arrow.svg\" alt=\"Ir a la cima de la página\"/>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToTopArrow;","import \"./App.css\";\r\nimport \"./global.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.min.js\";\r\nimport NavBar from \"./components/Navbar/NavBar\";\r\nimport ItemListContainer from \"./components/containers/itemListContainer/itemListContainer\";\r\nimport Footer from \"./components/footer/footer\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport ItemDetailContainer from \"./components/containers/itemDetailContainer/itemDetailContainer\";\r\nimport Cart from \"./components/cart/cart\";\r\nimport CartProvider from \"./components/contexts/cartContext\";\r\nimport UserProvider from \"./components/contexts/userContext\";\r\nimport CheckoutForm from \"./components/checkoutForm/checkoutForm\";\r\nimport Checkout from \"./components/checkout/checkout\";\r\nimport ToTopArrow from \"./components/toTopArrow/toTopArrow\";\r\n\r\nfunction App() {\r\n  return (\r\n    <CartProvider>\r\n      <UserProvider>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <NavBar logoSrc=\"images/logo/logo192.png\" />\r\n\r\n          <main className=\"container\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<ItemListContainer />} />\r\n              <Route\r\n                path=\"/category/:idCategory\"\r\n                element={<ItemListContainer />}\r\n              />\r\n              <Route\r\n                path=\"/item/:idItem\"\r\n                element={<ItemDetailContainer />}\r\n              />\r\n              <Route path=\"/cart\" element={<Cart />} />\r\n              <Route path=\"/checkout\" element={<CheckoutForm />} />\r\n              <Route\r\n                path=\"/checkout/final-step\"\r\n                element={<Checkout />}\r\n              />\r\n            </Routes>\r\n          </main>\r\n          <ToTopArrow />\r\n          <Footer />\r\n        </BrowserRouter>\r\n      </UserProvider>\r\n    </CartProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}